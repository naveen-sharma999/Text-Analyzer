{"version":3,"sources":["custom-components/Form.js","custom-components/Navbar.js","custom-components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","_useState","useState","_useState2","Object","slicedToArray","text","setText","react_default","a","createElement","className","heading","concat","mode","style","backgroundColor","id","rows","value","onChange","event","target","onClick","document","getElementById","select","navigator","clipboard","writeText","showAlert","upText","toUpperCase","loText","toLowerCase","words","split","x","forEach","element","charAt","slice","replace","trim","length","Navbar","href","title","type","toggleMode","role","htmlFor","btnText","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","Alert","alert","word","lower","cap1st","msg","defaultProps","wordl","charl","about","contact","App","setmode","_useState3","_useState4","btnext","setbtnext","_useState5","_useState6","setalert","message","setTimeout","Fragment","body","color","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4a11f5da.chunk.js","sourcesContent":["import React ,{useState} from \"react\";\r\n// hooks & state & event handling in react\r\n\r\nexport default function Form(props) {\r\n    const[text, setText] = useState('This is an example text, try on it.'); //its nessasery to use state - text have 'enter here' - cant't change directily so we use \r\n    const handeleOnChange = (event)=>{\r\n        //console.log('OnChange');\r\n        setText(event.target.value); //event handling - (event.target.value) allows to input in textarea\r\n    }\r\n    const handleUpClick = ()=>{\r\n        let upText = text.toUpperCase();\r\n        setText(upText);\r\n    }\r\n    const handleLoClick = ()=>{\r\n        let loText = text.toLowerCase();\r\n        setText(loText);\r\n    }\r\n    const handleCfClick = ()=>{\r\n        let words = text.split(\" \")\r\n        let x = ''\r\n         words.forEach(element => {\r\n           x += element.charAt(0).toUpperCase() + element.slice(1) + \" \"\r\n         });\r\n        setText(x)\r\n    }\r\n    const handleClearClick = ()=>{\r\n        let xText = \"\";\r\n        setText(xText);\r\n    }\r\n    const handleCopyClick = ()=>{\r\n        let text = document.getElementById('exampleFormControlTextarea1')\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value)\r\n        props.showAlert('Your Content copied to clipbord', 'success');\r\n    }\r\n    const handleEsClick = ()=>{\r\n        setText(text.replace(/\\s+/g,' ').trim())\r\n    }\r\n  return (\r\n    <div className=\"mb-3 container my-5\">\r\n        <h2>{props.heading}</h2>\r\n        <textarea className={`form-control text-${props.mode==='light'?'dark':'light'}`} style={{backgroundColor : props.mode==='light'?'#f1f1f1':'grey'}} id=\"exampleFormControlTextarea1\" rows=\"6\" value={text} onChange={handeleOnChange}></textarea>\r\n        <br/>\r\n        <button className=\"btn btn-danger mx-1 mb-2\" onClick={handleClearClick}>Clear</button>\r\n        <button className=\"btn btn-success mx-1 mb-2\" onClick={handleCopyClick}>Copy</button>\r\n        <button className=\"btn btn-primary mx-1 mb-2\" onClick={handleUpClick}>UpperCase</button>\r\n        <button className=\"btn btn-primary mx-1 mb-2\" onClick={handleLoClick}>LowerCase</button>\r\n        <button className=\"btn btn-primary mx-1 mb-2\" onClick={handleCfClick}>Justified</button>\r\n        <button className=\"btn btn-primary mx-1 mb-2\" onClick={handleEsClick}>RemoveExtraSpace</button>\r\n        <hr/>\r\n        <div className=\"container my-3 text-center\">\r\n            <h3>Your Text Summary</h3>\r\n            <p>{text.length>0 ? text.split(\" \").length : '0'} Words and {text.length} characters</p>\r\n            <p>It takes approx {text.length>0 ? 0.008* text.split(\" \").length : '0'} Minutes to read</p>\r\n            <p><b>Note : </b>Justified converts first letter of each words into Capital letters</p>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nForm.defaultProps = {\r\n    wordl : '0',\r\n    charl : '0',\r\n    heading : 'Heading'\r\n};","import React from 'react' \r\nimport PropTypes from 'prop-types'\r\n//import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-${props.mode} navbar-expand-lg bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\">\r\n        {props.title}\r\n      </a>\r\n      <div className=\"form-check form-switch mx-3 form-check-reverse\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckReverse\" onClick={props.toggleMode} role=\"button\"/>\r\n          <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckReverse\">{props.btnText}</label>\r\n      </div>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-bs-toggle=\"collapse\"\r\n        data-bs-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n              Home\r\n            </a>\r\n          </li>\r\n          {/*<li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/\">\r\n              Blog\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/\">\r\n              Services\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/about\">\r\n              {props.about}\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/\">\r\n              {props.contact}\r\n            </a>\r\n          </li>*/}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {title : PropTypes.string,\r\n                    about : PropTypes.string,\r\n                    contact : PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : 'Title ?',\r\n    about : 'About',\r\n    contact : 'Contact us'\r\n};","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const cap1st = (word)=>{\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n      props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{cap1st(props.alert.type)}</strong> : {props.alert.msg}\r\n      </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport React ,{useState} from \"react\";\nimport Form from \"./custom-components/Form\";\nimport Navbar from \"./custom-components/Navbar\";\nimport Alert from \"./custom-components/Alert\";\n//import About from \"./custom-components/About\";\n//import NotFound from \"./custom-components/NotFound\";\n//import {BrowserRouter as Router, Routes, Route,} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light'); // default light\n  const [btnext, setbtnext] = useState('DarkMode OFF');\n  const [alert, setalert] = useState(null)\n  \n  const toggleMode = ()=>{ //on toggle or movement of switch \n    if(mode === 'light')  //main functionality\n      {setmode('dark')   //means mode = \"dark\" \n       setbtnext('DarkMode ON')\n       showAlert('Dark Mode is Enabeld', 'success')\n       document.body.style.backgroundColor = '#042743'; //all over the body background\n       document.body.style.color = 'white';}           // & text color\n    else\n      {setmode('light') //if turn off again mode = \"light\"\n       setbtnext('DarkMode OFF')\n       showAlert('Dark Mode is Disabled - Enable Darkmode, Helps you to protect your eyes', 'warning')\n       document.body.style.backgroundColor = 'white'; // vise versa\n       document.body.style.color = 'black';}\n  }\n\n  const showAlert = (message, type)=>{\n    setalert({\n      msg : message,\n      type : type\n   })\n   setTimeout(()=>{\n    setalert(null)\n   },5000);\n  }\n\n  return (\n    <>\n    {/*<Router>*/}\n      <Navbar contact=\"Contact us\" title=\"Text Analyzer\" mode={mode} toggleMode={toggleMode} btnText={btnext}/>\n      <Alert alert={alert}/>\n      {/*<Routes>*/}\n      <Form heading=\"Enter The Text To Analyse\" mode={mode} showAlert={showAlert}/>\n      {/*<About mode={mode}/>*/}\n      {/*<NotFound/>*/}\n        {/*</Routes>*/}\n    {/*</Router>*/}\n    </>  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}