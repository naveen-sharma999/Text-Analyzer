{"version":3,"sources":["custom-components/Form.js","custom-components/Navbar.js","custom-components/Alert.js","custom-components/About.js","custom-components/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","_useState","useState","_useState2","Object","slicedToArray","text","setText","react_default","a","createElement","className","heading","concat","mode","style","backgroundColor","id","rows","value","onChange","event","target","onClick","document","getElementById","select","navigator","clipboard","writeText","showAlert","upText","toUpperCase","loText","toLowerCase","words","split","x","forEach","element","charAt","slice","replace","trim","filter","length","defaultProps","wordl","charl","Navbar","react_router_dom","to","title","type","toggleMode","role","htmlFor","btnText","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","about","Alert","height","alert","word","lower","cap1st","msg","About","aria-labelledby","data-bs-parent","NotFound","contact","App","setmode","_useState3","_useState4","btnext","setbtnext","_useState5","_useState6","setalert","message","setTimeout","Fragment","body","color","react_router","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.bf64caad.chunk.js","sourcesContent":["import React ,{useState} from \"react\";\r\n// hooks & state & event handling in react\r\n\r\nexport default function Form(props) {\r\n    const[text, setText] = useState('This is an example text, try on it.'); //its nessasery to use state - text have 'enter here' - cant't change directily so we use \r\n    const handeleOnChange = (event)=>{\r\n        //console.log('OnChange');\r\n        setText(event.target.value); //event handling - (event.target.value) allows to input in textarea\r\n    }\r\n    const handleUpClick = ()=>{\r\n        let upText = text.toUpperCase();\r\n        setText(upText);\r\n    }\r\n    const handleLoClick = ()=>{\r\n        let loText = text.toLowerCase();\r\n        setText(loText);\r\n    }\r\n    const handleCfClick = ()=>{\r\n        let words = text.split(\" \")\r\n        let x = ''\r\n         words.forEach(element => {\r\n           x += element.charAt(0).toUpperCase() + element.slice(1) + \" \"\r\n         });\r\n        setText(x)\r\n    }\r\n    const handleClearClick = ()=>{\r\n        let xText = \"\";\r\n        setText(xText);\r\n    }\r\n    const handleCopyClick = ()=>{\r\n        let text = document.getElementById('exampleFormControlTextarea1')\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value)\r\n        props.showAlert('Your Content copied to clipbord', 'success');\r\n    }\r\n    const handleEsClick = ()=>{\r\n        setText(text.replace(/\\s+/g,' ').trim())\r\n    }\r\n  return (\r\n    <div className=\"mb-3 container my-2\">\r\n        <h2>{props.heading}</h2>\r\n        <textarea className={`form-control text-${props.mode==='light'?'dark':'light'}`} style={{backgroundColor : props.mode==='light'?'#f1f1f1':'grey'}} id=\"exampleFormControlTextarea1\" rows=\"6\" value={text} onChange={handeleOnChange}></textarea>\r\n        <br/>\r\n        <button className=\"btn btn-danger mx-1 mb-2\" onClick={handleClearClick}>Clear</button>\r\n        <button className=\"btn btn-success mx-1 mb-2\" onClick={handleCopyClick}>Copy</button>\r\n        <button className=\"btn btn-primary mx-1 mb-2\" onClick={handleUpClick}>UpperCase</button>\r\n        <button className=\"btn btn-primary mx-1 mb-2\" onClick={handleLoClick}>LowerCase</button>\r\n        <button className=\"btn btn-primary mx-1 mb-2\" onClick={handleCfClick}>Justified</button>\r\n        <button className=\"btn btn-primary mx-1 mb-2\" onClick={handleEsClick}>RemoveExtraSpace</button>\r\n        <hr/>\r\n        <div className=\"container my-3 text-center\">\r\n            <h3>Your Text Summary</h3>\r\n            <p>{text.split(\" \").filter((element)=>{return element.length !== 0}).length} Words and {text.length} characters</p>\r\n            <p>It takes approx {text.length>0 ? 0.008* text.split(\" \").length : '0'} Minutes to read</p>\r\n            <p><b>Note : </b>Justified converts first letter of each words into Capital letters</p>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nForm.defaultProps = {\r\n    wordl : '0',\r\n    charl : '0',\r\n    heading : 'Heading'\r\n};","import React from 'react' \r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-${props.mode} navbar-expand-lg bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        {props.title}\r\n      </Link>\r\n      <div className=\"form-check form-switch mx-3 form-check-reverse\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckReverse\" onClick={props.toggleMode} role=\"button\"/>\r\n          <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckReverse\">{props.btnText}</label>\r\n      </div>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-bs-toggle=\"collapse\"\r\n        data-bs-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" to=\"/about\">\r\n              {props.about}\r\n            </Link>\r\n          </li>\r\n          {/*<li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/\">\r\n              Services\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/blog\">\r\n              Blog\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/\">\r\n              {props.contact}\r\n            </Link>\r\n          </li>*/}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {title : PropTypes.string,\r\n                    about : PropTypes.string,\r\n                    contact : PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : 'Title ?',\r\n    about : 'About',\r\n    contact : 'Contact us'\r\n};","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const cap1st = (word)=>{\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height : '50px'}}>\r\n      {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                         <strong>{cap1st(props.alert.type)}</strong> : {props.alert.msg}\r\n                      </div>}\r\n      </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n\r\n  return (\r\n    <div className={`container py-2`} style={{backgroundColor : props.mode==='light'?'white':'#042743'}}>\r\n      <h3>About Terms $ conditions</h3>  \r\n      <div className={`accordion`} id=\"accordionExample\">\r\n        <div className={`accordion-item bg-${props.mode==='light'?'light':'dark'} text-${props.mode==='light'?'dark':'light'}`}>\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className={`accordion-button collapsed bg-${props.mode==='light'?'light':'secondary'} text-${props.mode==='light'?'dark':'light'}`}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              Terms\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={`accordion-item bg-${props.mode==='light'?'light':'dark'} text-${props.mode==='light'?'dark':'light'}`}>\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className={`accordion-button collapsed bg-${props.mode==='light'?'light':'secondary'} text-${props.mode==='light'?'dark':'light'}`}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n            >\r\n              Polices\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={`accordion-item bg-${props.mode==='light'?'light':'dark'} text-${props.mode==='light'?'dark':'light'}`}>\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className={`accordion-button collapsed bg-${props.mode==='light'?'light':'secondary'} text-${props.mode==='light'?'dark':'light'}`}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              Leagl\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NotFound(props) {\r\n  return (\r\n      <div className='d-flex flex-column justify-content-center align-items-center' style={{'height': '500px'}}>\r\n        <h1>ERROR 404!</h1>\r\n        <h3>page not found</h3>\r\n        <p><Link to=\"/\">Go Home</Link></p>\r\n      </div>\r\n  );\r\n}","import \"./App.css\";\nimport React ,{useState} from \"react\";\nimport Form from \"./custom-components/Form\";\nimport Navbar from \"./custom-components/Navbar\";\nimport Alert from \"./custom-components/Alert\";\nimport About from \"./custom-components/About\";\nimport NotFound from \"./custom-components/NotFound\";\nimport {HashRouter, Routes, Route,} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light'); // default light\n  const [btnext, setbtnext] = useState('DarkMode OFF');\n  const [alert, setalert] = useState(null)\n  \n  const toggleMode = ()=>{ //on toggle or movement of switch \n    if(mode === 'light')  //main functionality\n      {setmode('dark')   //means mode = \"dark\" \n       setbtnext('DarkMode ON')\n       showAlert('Dark Mode is Enabeld', 'success')\n       document.body.style.backgroundColor = '#042743'; //all over the body background\n       document.body.style.color = 'white';}           // & text color\n    else\n      {setmode('light') //if turn off again mode = \"light\"\n       setbtnext('DarkMode OFF')\n       showAlert('Dark Mode is Disabled - Enable Darkmode, Helps you to protect your eyes', 'warning')\n       document.body.style.backgroundColor = 'white'; // vise versa\n       document.body.style.color = 'black';}\n  }\n\n  const showAlert = (message, type)=>{\n    setalert({\n      msg : message,\n      type : type\n   })\n   setTimeout(()=>{\n    setalert(null)\n   },5000);\n  }\n\n  return (\n    <>\n    <HashRouter>\n      <Navbar contact=\"Contact us\" title=\"Text Analyzer\" mode={mode} toggleMode={toggleMode} btnText={btnext}/>\n      <Alert alert={alert}/>\n      <Routes>\n        <Route path=\"/\" element={<Form heading=\"Enter The Text To Analyse\" mode={mode} showAlert={showAlert}/>} />\n        <Route path=\"/about\" element={<About mode={mode}/>} />\n        <Route path=\"*\" element={<NotFound/>}/>\n      </Routes>\n    </HashRouter>\n    </>  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\nreportWebVitals();\n"],"sourceRoot":""}